/* DO NOT EDIT! This file is auto-generated by graphql-code-generator - see `codegen.yml` */
import * as Types from '../../../graphql/index';

import { gql } from '@apollo/client';
import * as Apollo from '@apollo/client';
const defaultOptions =  {}
export type OrganizationBySlugQueryVariables = Types.Exact<{
  slug: Types.Scalars['String'];
}>;


export type OrganizationBySlugQuery = { __typename?: 'Query', organizationBySlug: Types.Maybe<{ __typename?: 'Organization', id: any, name: string, slug: string }> };


export const OrganizationBySlugDocument = gql`
    query OrganizationBySlug($slug: String!) {
  organizationBySlug(slug: $slug) {
    id
    name
    slug
  }
}
    `;

/**
 * __useOrganizationBySlugQuery__
 *
 * To run a query within a React component, call `useOrganizationBySlugQuery` and pass it any options that fit your needs.
 * When your component renders, `useOrganizationBySlugQuery` returns an object from Apollo Client that contains loading, error, and data properties
 * you can use to render your UI.
 *
 * @param baseOptions options that will be passed into the query, supported options are listed on: https://www.apollographql.com/docs/react/api/react-hooks/#options;
 *
 * @example
 * const { data, loading, error } = useOrganizationBySlugQuery({
 *   variables: {
 *      slug: // value for 'slug'
 *   },
 * });
 */
export function useOrganizationBySlugQuery(baseOptions: Apollo.QueryHookOptions<OrganizationBySlugQuery, OrganizationBySlugQueryVariables>) {
        const options = {...defaultOptions, ...baseOptions}
        return Apollo.useQuery<OrganizationBySlugQuery, OrganizationBySlugQueryVariables>(OrganizationBySlugDocument, options);
      }
export function useOrganizationBySlugLazyQuery(baseOptions?: Apollo.LazyQueryHookOptions<OrganizationBySlugQuery, OrganizationBySlugQueryVariables>) {
          const options = {...defaultOptions, ...baseOptions}
          return Apollo.useLazyQuery<OrganizationBySlugQuery, OrganizationBySlugQueryVariables>(OrganizationBySlugDocument, options);
        }
export type OrganizationBySlugQueryHookResult = ReturnType<typeof useOrganizationBySlugQuery>;
export type OrganizationBySlugLazyQueryHookResult = ReturnType<typeof useOrganizationBySlugLazyQuery>;
export type OrganizationBySlugQueryResult = Apollo.QueryResult<OrganizationBySlugQuery, OrganizationBySlugQueryVariables>;